<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SmallEarthTech.AntRadioInterface</name>
    </assembly>
    <members>
        <member name="T:SmallEarthTech.AntRadioInterface.FlagByte">
            <summary>Flag byte enumeration.</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.FlagByte.None">
            <summary>The none</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.FlagByte.RxTimestamp">
            <summary>The Rx timestamp</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.FlagByte.Rssi">
            <summary>The RSSI</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.FlagByte.ChannelId">
            <summary>The channel identifier</summary>
        </member>
        <member name="T:SmallEarthTech.AntRadioInterface.MessageId">
            <summary>Message identifier of the received data.</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.MessageId.AntRadioVersion">
            <summary>ANT radio version strings</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.MessageId.ChannelEventOrResponse">
            <summary>The channel event or response</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.MessageId.BroadcastData">
            <summary>The broadcast data</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.MessageId.AcknowledgedData">
            <summary>The acknowledged data</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.MessageId.BurstData">
            <summary>The burst data</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.MessageId.ExtBroadcastData">
            <summary>The extended broadcast data</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.MessageId.ExtAcknowledgedData">
            <summary>The extended acknowledged data</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.MessageId.ExtBurstData">
            <summary>The extended burst data</summary>
        </member>
        <member name="T:SmallEarthTech.AntRadioInterface.AntResponse">
            <summary>
            Derive from AntResponse to support a concrete implementation (i.e. USB ANT radio).
            </summary>
        </member>
        <member name="P:SmallEarthTech.AntRadioInterface.AntResponse.Sender">
            <summary>
            The object that created this response (ie: The corresponding ANTChannel or ANTDevice instance).
            </summary>
        </member>
        <member name="P:SmallEarthTech.AntRadioInterface.AntResponse.ChannelNumber">
            <summary>
            The channel parameter received in the message. Note: For some messages this is not applicable.
            </summary>
        </member>
        <member name="P:SmallEarthTech.AntRadioInterface.AntResponse.TimeReceived">
            <summary>
            The time the message was received.
            </summary>
        </member>
        <member name="P:SmallEarthTech.AntRadioInterface.AntResponse.ResponseId">
            <summary>
            The MessageID of the response
            </summary>
        </member>
        <member name="P:SmallEarthTech.AntRadioInterface.AntResponse.ChannelId">
            <summary>
            Gets the channel identifier.
            </summary>
            <value>
            The channel identifier.
            </value>
        </member>
        <member name="P:SmallEarthTech.AntRadioInterface.AntResponse.Payload">
            <summary>
            The data page payload.
            </summary>
        </member>
        <member name="P:SmallEarthTech.AntRadioInterface.AntResponse.Rssi">
            <summary>
            Gets the RSSI in dBm.
            </summary>
        </member>
        <member name="P:SmallEarthTech.AntRadioInterface.AntResponse.ThresholdConfigurationValue">
            <summary>
            Gets the threshold configuration value.
            </summary>
        </member>
        <member name="P:SmallEarthTech.AntRadioInterface.AntResponse.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="T:SmallEarthTech.AntRadioInterface.ChannelId">
            <summary>The channel ID is a concrete class comprised of device number, device type, and transmission type.</summary>
            <remarks>
            The channel identifier is received in ANT packets as a 32 bit number. Extended messages need to be enabled.
            Use the Id property for messages transmitted to an ANT device. This is handled automatically in the
            device profiles.
            </remarks>
        </member>
        <member name="P:SmallEarthTech.AntRadioInterface.ChannelId.Id">
            <summary>Gets the channel identifier.</summary>
            <value>The channel identifier.</value>
        </member>
        <member name="P:SmallEarthTech.AntRadioInterface.ChannelId.DeviceType">
            <summary>Gets the type of the device.</summary>
            <value>The type of the device.</value>
        </member>
        <member name="P:SmallEarthTech.AntRadioInterface.ChannelId.DeviceNumber">
            <summary>Gets the device number.</summary>
            <value>The device number.</value>
        </member>
        <member name="P:SmallEarthTech.AntRadioInterface.ChannelId.IsPairingBitSet">
            <summary>Gets a value indicating whether this instance has the pairing bit set.</summary>
            <value>
              <c>true</c> if this instance has pairing bit set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SmallEarthTech.AntRadioInterface.ChannelId.TransmissionType">
            <summary>Gets the type of the transmission.</summary>
            <value>The type of the transmission.</value>
        </member>
        <member name="P:SmallEarthTech.AntRadioInterface.ChannelId.AreGlobalDataPagesUsed">
            <summary>Gets a value indicating whether global data pages are used.</summary>
            <value>
              <c>true</c> if global data pages are used; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.ChannelId.#ctor(System.UInt32)">
            <summary>Initializes a new instance of the <see cref="T:SmallEarthTech.AntRadioInterface.ChannelId" /> struct.</summary>
            <param name="channelId">The channel identifier.</param>
        </member>
        <member name="T:SmallEarthTech.AntRadioInterface.DeviceCapabilities">
            <summary>The radio capabilities class.</summary>
        </member>
        <member name="P:SmallEarthTech.AntRadioInterface.DeviceCapabilities.MaxANTChannels">
            <summary>
            Number of channels available.
            </summary>
        </member>
        <member name="P:SmallEarthTech.AntRadioInterface.DeviceCapabilities.MaxNetworks">
            <summary>
            Number of simultaneous networks allowed
            </summary>
        </member>
        <member name="P:SmallEarthTech.AntRadioInterface.DeviceCapabilities.NoReceiveChannels">
            <summary>Gets a value indicating whether [no receive channels].</summary>
            <value>
              <c>true</c> if [no receive channels]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SmallEarthTech.AntRadioInterface.DeviceCapabilities.NoTransmitChannels">
            <summary>Gets a value indicating whether [no transmit channels].</summary>
            <value>
              <c>true</c> if [no transmit channels]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SmallEarthTech.AntRadioInterface.DeviceCapabilities.NoReceiveMessages">
            <summary>Gets a value indicating whether [no receive messages].</summary>
            <value>
              <c>true</c> if [no receive messages]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SmallEarthTech.AntRadioInterface.DeviceCapabilities.NoTransmitMessages">
            <summary>Gets a value indicating whether [no transmit messages].</summary>
            <value>
              <c>true</c> if [no transmit messages]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SmallEarthTech.AntRadioInterface.DeviceCapabilities.NoAckMessages">
            <summary>Gets a value indicating whether [no ack messages].</summary>
            <value>
              <c>true</c> if [no ack messages]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SmallEarthTech.AntRadioInterface.DeviceCapabilities.NoBurstMessages">
            <summary>Gets a value indicating whether [no burst messages].</summary>
            <value>
              <c>true</c> if [no burst messages]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SmallEarthTech.AntRadioInterface.DeviceCapabilities.PrivateNetworks">
            <summary>Gets a value indicating whether private networks are supported.</summary>
            <value>
              <c>true</c> if supported; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SmallEarthTech.AntRadioInterface.DeviceCapabilities.SerialNumber">
            <summary>Gets a value indicating whether serial number is supported.</summary>
            <value>
              <c>true</c> if supported; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SmallEarthTech.AntRadioInterface.DeviceCapabilities.PerChannelTransmitPower">
            <summary>Gets a value indicating whether per channel transmit power is supported.</summary>
            <value>
              <c>true</c> if supported; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SmallEarthTech.AntRadioInterface.DeviceCapabilities.LowPrioritySearch">
            <summary>Gets a value indicating whether low priority search is supported.</summary>
            <value>
              <c>true</c> if supported; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SmallEarthTech.AntRadioInterface.DeviceCapabilities.ScriptSupport">
            <summary>Gets a value indicating whether script is supported.</summary>
            <value>
              <c>true</c> if supported; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SmallEarthTech.AntRadioInterface.DeviceCapabilities.SearchList">
            <summary>Gets a value indicating whether search list is supported.</summary>
            <value>
              <c>true</c> if supported; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SmallEarthTech.AntRadioInterface.DeviceCapabilities.OnboardLED">
            <summary>Gets a value indicating whether onboard led is supported.</summary>
            <value>
              <c>true</c> if supported; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SmallEarthTech.AntRadioInterface.DeviceCapabilities.ExtendedMessaging">
            <summary>Gets a value indicating whether extended messaging is supported.</summary>
            <value>
              <c>true</c> if supported; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SmallEarthTech.AntRadioInterface.DeviceCapabilities.ScanModeSupport">
            <summary>Gets a value indicating whether scan mode supported.</summary>
            <value>
              <c>true</c> if supported; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SmallEarthTech.AntRadioInterface.DeviceCapabilities.ExtendedChannelAssignment">
            <summary>Gets a value indicating whether extended channel assignment is supported.</summary>
            <value>
              <c>true</c> if supported; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SmallEarthTech.AntRadioInterface.DeviceCapabilities.ProximitySearch">
            <summary>Gets a value indicating whether proximity search is supported.</summary>
            <value>
              <c>true</c> if supported; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SmallEarthTech.AntRadioInterface.DeviceCapabilities.ANTFS_Support">
            <summary>Gets a value indicating whether this <see cref="T:SmallEarthTech.AntRadioInterface.DeviceCapabilities" /> is ANTFS supported.</summary>
            <value>
              <c>true</c> if supported; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SmallEarthTech.AntRadioInterface.DeviceCapabilities.FITSupport">
            <summary>Gets a value indicating whether this <see cref="T:SmallEarthTech.AntRadioInterface.DeviceCapabilities" /> is FIT file compatible.</summary>
            <value>
              <c>true</c> if supported; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SmallEarthTech.AntRadioInterface.DeviceCapabilities.AdvancedBurst">
            <summary>Gets a value indicating whether advanced burst is supported.</summary>
            <value>
              <c>true</c> if supported; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SmallEarthTech.AntRadioInterface.DeviceCapabilities.EventBuffering">
            <summary>Gets a value indicating whether event buffering is supported.</summary>
            <value>
              <c>true</c> if supported; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SmallEarthTech.AntRadioInterface.DeviceCapabilities.EventFiltering">
            <summary>Gets a value indicating whether event filtering is supported.</summary>
            <value>
              <c>true</c> if supported; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SmallEarthTech.AntRadioInterface.DeviceCapabilities.HighDutySearch">
            <summary>Gets a value indicating whether high duty search is supported.</summary>
            <value>
              <c>true</c> if supported; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SmallEarthTech.AntRadioInterface.DeviceCapabilities.SearchSharing">
            <summary>Gets a value indicating whether search sharing is supported.</summary>
            <value>
              <c>true</c> if supported; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SmallEarthTech.AntRadioInterface.DeviceCapabilities.SelectiveDataUpdate">
            <summary>Gets a value indicating whether selective data update is supported.</summary>
            <value>
              <c>true</c> if supported; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SmallEarthTech.AntRadioInterface.DeviceCapabilities.SingleChannelEncryption">
            <summary>Gets a value indicating whether single channel encryption is supported.</summary>
            <value>
              <c>true</c> if supported; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SmallEarthTech.AntRadioInterface.DeviceCapabilities.MaxDataChannels">
            <summary>
            Number of SensRcore data channels available
            </summary>
        </member>
        <member name="T:SmallEarthTech.AntRadioInterface.ChannelType">
            <summary>
            Channel Type flags. A valid channel type is one BASE parameter (Slave XOR Receive)
            combined by '|' (bitwise OR) with any desired ADV parameters
            </summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.ChannelType.BaseSlaveReceive">
            <summary>The base slave receive</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.ChannelType.BaseMasterTransmit">
            <summary>The base master transmit</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.ChannelType.AdvShared">
            <summary>The advanced shared channel</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.ChannelType.AdvTxRxOnlyOrRxAlwaysWildCard">
            <summary>The advanced Tx/Rx only or Rx always wild card</summary>
        </member>
        <member name="T:SmallEarthTech.AntRadioInterface.ChannelTypeExtended">
            <summary>The extended channel type enum.</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.ChannelTypeExtended.AdvAlwaysSearch">
            <summary>The advanced always search</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.ChannelTypeExtended.AdvFrequencyAgility">
            <summary>The advanced frequency agility</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.ChannelTypeExtended.AdvFastStart">
            <summary>The advanced fast start</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.ChannelTypeExtended.AdvAsyncTx">
            <summary>The advanced asynchronous Tx</summary>
        </member>
        <member name="T:SmallEarthTech.AntRadioInterface.MessagingReturnCode">
            <summary>
            The int status codes returned by the acknowledged and broadcast messaging functions.
            </summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.MessagingReturnCode.Fail">
            <summary>Failed</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.MessagingReturnCode.Pass">
            <summary>Passed</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.MessagingReturnCode.Timeout">
            <summary>Timeout</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.MessagingReturnCode.Cancelled">
            <summary>Cancelled</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.MessagingReturnCode.InvalidParams">
            <summary>Invalid parameters</summary>
        </member>
        <member name="T:SmallEarthTech.AntRadioInterface.ChannelSharing">
            <summary>
            ANT channel sharing enumeration. This is obtained from the transmission type in the channel ID.
            </summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.ChannelSharing.Reserved">
            <summary>The reserved</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.ChannelSharing.IndependentChannel">
            <summary>
            The independent channel
            </summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.ChannelSharing.SharedChannelOneByteAddress">
            <summary>
            The shared channel one byte address
            </summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.ChannelSharing.SharedChannelTwoByteAddress">
            <summary>
            The shared channel two byte address
            </summary>
        </member>
        <member name="T:SmallEarthTech.AntRadioInterface.BasicChannelStatusCode">
            <summary>
            Basic Channel status message codes, the bottom two bits of the received status message.
            </summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.BasicChannelStatusCode.Unassigned">
            <summary>Unassigned</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.BasicChannelStatusCode.Assigned">
            <summary>Assigned</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.BasicChannelStatusCode.Searching">
            <summary>Searching</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.BasicChannelStatusCode.Tracking">
            <summary>Tracking</summary>
        </member>
        <member name="T:SmallEarthTech.AntRadioInterface.ChannelStatus">
            <summary>
            Contains the information returned by a channel status request message
            </summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.ChannelStatus.BasicStatus">
            <summary>
            Bits 0-1 of the status response
            </summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.ChannelStatus.networkNumber">
            <summary>
            Bits 2-3 of the status response. Invalid on AP1.
            </summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.ChannelStatus.ChannelType">
            <summary>
            Bits 4-7 of the status response. Not a valid channelType on AP1.
            </summary>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.ChannelStatus.#ctor(SmallEarthTech.AntRadioInterface.BasicChannelStatusCode,System.Byte,SmallEarthTech.AntRadioInterface.ChannelType)">
            <summary>
            Creates and fills the ChannelStatus
            </summary>
            <param name="BasicStatus">Channel status code</param>
            <param name="networkNumber">ANT network number</param>
            <param name="ChannelType">Channel type</param>
        </member>
        <member name="T:SmallEarthTech.AntRadioInterface.IAntChannel">
            <summary>The ANT channel interface.</summary>
        </member>
        <member name="E:SmallEarthTech.AntRadioInterface.IAntChannel.ChannelResponse">
            <summary>
            The channel response event. Triggered every time a message is received from the ANT device.
            </summary>
        </member>
        <member name="P:SmallEarthTech.AntRadioInterface.IAntChannel.ChannelNumber">
            <summary>Gets the channel number.</summary>
            <returns>ANT channel number.</returns>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntChannel.RequestStatus(System.UInt32)">
            <summary>
            Returns current channel status.
            Throws exception on timeout.
            </summary>
            <param name="responseWaitTime">Time to wait for device success response</param>
            <returns>
            Channel status
            </returns>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntChannel.RequestChannelID(System.UInt32)">
            <summary>Requests the channel identifier.</summary>
            <param name="responseWaitTime">The response wait time.</param>
            <returns>The <see cref="T:SmallEarthTech.AntRadioInterface.ChannelId"/>.</returns>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntChannel.AssignChannel(SmallEarthTech.AntRadioInterface.ChannelType,System.Byte,System.UInt32)">
            <overloads>Assign channel</overloads>
            <summary>
            Assign an ANT channel along with its main parameters.
            Throws exception if the network number is invalid.
            </summary>
            <param name="channelTypeByte">Channel Type byte</param>
            <param name="networkNumber">Network to assign to channel, must be less than device's max networks-1</param>
            <param name="responseWaitTime">Time to wait for device success response</param>
            <returns>True on success. Note: Always returns true with a response time of 0</returns>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntChannel.AssignChannelExt(SmallEarthTech.AntRadioInterface.ChannelType,System.Byte,SmallEarthTech.AntRadioInterface.ChannelTypeExtended,System.UInt32)">
            <overloads>Assign channel (extended)</overloads>
            <summary>
            Assign an ANT channel, using extended channel assignment
            Throws exception if the network number is invalid.
            </summary>
            <param name="channelTypeByte">Channel Type byte</param>
            <param name="networkNumber">Network to assign to channel, must be less than device's max networks - 1</param>
            <param name="extAssignByte">Extended assignment byte</param>
            <param name="responseWaitTime">Time to wait for device success response</param>
            <returns>True on success. Note: Always returns true with a response time of 0</returns>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntChannel.UnassignChannel(System.UInt32)">
            <overloads>Unassign channel</overloads>
            <summary>
            Unassign this channel.
            </summary>
            <param name="responseWaitTime">Time to wait for device success response</param>
            <returns>True on success. Note: Always returns true with a response time of 0</returns>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntChannel.SetChannelID(SmallEarthTech.AntRadioInterface.ChannelId,System.UInt32)">
            <summary>Set the Channel ID of this channel.
            Throws exception if device type is &gt; 127.</summary>
            <param name="channelId">Channel ID class</param>
            <param name="responseWaitTime">Time to wait for device success response</param>
            <returns>True on success. Note: Always returns true with a response time of 0</returns>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntChannel.SetChannelID_UsingSerial(SmallEarthTech.AntRadioInterface.ChannelId,System.UInt32)">
            <overloads>Sets the Channel ID, using serial number as device number</overloads>
            <summary>
            Identical to setChannelID, except last two bytes of serial number are used for device number.
            Not available on all ANT devices.
            Throws exception if device type is > 127.
            </summary>
            <param name="channelId">Channel ID class</param>
            <param name="waitResponseTime">Time to wait for device success response</param>
            <returns>True on success. Note: Always returns true with a response time of 0</returns>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntChannel.SetChannelPeriod(System.UInt16,System.UInt32)">
            <overloads>Sets channel message period</overloads>
            <summary>
            Set this channel's messaging period
            </summary>
            <param name="messagePeriod">Desired period in seconds * 32768</param>
            <param name="responseWaitTime">Time to wait for device success response</param>
            <returns>True on success. Note: Always returns true with a response time of 0</returns>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntChannel.SetSearchThresholdRSSI(System.Byte,System.UInt32)">
            <overloads>Sets the RSSI threshold (ARCT)</overloads>
            <summary>
            Set this channel's RSSI threshold (ARCT)
            </summary>
            <param name="thresholdRSSI">Desired RSSI threshold value</param>
            <param name="responseWaitTime">Time to wait for device success response</param>
            <returns>True on success. Note: Always returns true with a response time of 0</returns>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntChannel.SetChannelFreq(System.Byte,System.UInt32)">
            <overloads>Sets channel RF Frequency</overloads>
            <summary>
            Set this channel's RF frequency, with the given offset from 2400Mhz.
            Note: Changing this frequency may affect the ability to certify the product in certain areas of the world.
            </summary>
            <param name="RFFreqOffset">Offset to add to 2400Mhz</param>
            <param name="responseWaitTime">Time to wait for device success response</param>
            <returns>True on success. Note: Always returns true with a response time of 0</returns>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntChannel.SetChannelTransmitPower(SmallEarthTech.AntRadioInterface.TransmitPower,System.UInt32)">
            <overloads>Sets the channel transmission power</overloads>
            <summary>
            Set the transmission power of this channel
            Throws exception if device is not capable of per-channel transmit power.
            </summary>
            <param name="transmitPower">Transmission power to set to</param>
            <param name="responseWaitTime">Time to wait for device success response</param>
            <returns>True on success. Note: Always returns true with a response time of 0</returns>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntChannel.SetChannelSearchTimeout(System.Byte,System.UInt32)">
            <overloads>Sets the channel search timeout</overloads>
            <summary>
            Set the search timeout
            </summary>
            <param name="searchTimeout">timeout in 2.5 second units (in newer devices 255=infinite)</param>
            <param name="responseWaitTime">Time to wait for device success response</param>
            <returns>True on success. Note: Always returns true with a response time of 0</returns>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntChannel.OpenChannel(System.UInt32)">
            <overloads>Opens the channel</overloads>
            <summary>
            Opens this channel
            </summary>
            <param name="responseWaitTime">Time to wait for device success response</param>
            <returns>True on success. Note: Always returns true with a response time of 0</returns>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntChannel.SendBroadcastData(System.Byte[])">
            <overloads>Sends broadcast message</overloads>
            <summary>
            Sends the given data on the broadcast transmission.
            Throws exception if data > 8-bytes in length
            </summary>
            <param name="data">data to send (length 8 or less)</param>
            <returns>
            true if successful
            </returns>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntChannel.SendBurstTransfer(System.Byte[],System.UInt32)">
            <overloads>Sends burst transfer</overloads>
            <summary>
            Sends the given data as a burst transmission. Returns: 0=fail, 1=pass, 2=timeout, 3=cancelled
            </summary>
            <param name="data">data to send, can be any length</param>
            <param name="completeWaitTime">Time in ms to wait for completion of transfer</param>
            <returns>0=fail, 1=pass, 2=timeout, 3=cancelled</returns>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntChannel.SendBurstTransferAsync(System.Byte[],System.UInt32)">
            <overloads>Sends burst transfer</overloads>
            <summary>
            Sends the given data as a burst transmission. Returns: 0=fail, 1=pass, 2=timeout, 3=cancelled
            </summary>
            <param name="data">data to send, can be any length</param>
            <param name="completeWaitTime">Time in ms to wait for completion of transfer</param>
            <returns>0=fail, 1=pass, 2=timeout, 3=cancelled</returns>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntChannel.SendExtBroadcastData(SmallEarthTech.AntRadioInterface.ChannelId,System.Byte[])">
            <summary>Sends the given data as an extended broadcast transmission.
            Throws exception if data &gt; 8-bytes in length</summary>
            <param name="channelId">The channel ID of the ANT device</param>
            <param name="data">data to send (length 8 or less)</param>
            <overloads>Sends extended broadcast message</overloads>
            <returns>
            true if successful
            </returns>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntChannel.SendAcknowledgedData(System.Byte[],System.UInt32)">
            <summary>
            Sends the given data as an acknowledged transmission.
            Throws exception if data > 8-bytes in length
            </summary>
            <param name="data">data to send (length 8 or less)</param>
            <param name="ackWaitTime">Time in ms to wait for acknowledgement</param>
            <returns>0=fail, 1=pass, 2=timeout, 3=cancelled</returns>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntChannel.SendAcknowledgedDataAsync(System.Byte[],System.UInt32)">
            <summary>
            Sends the given data as an acknowledged transmission.
            Throws exception if data > 8-bytes in length
            </summary>
            <param name="data">data to send (length 8 or less)</param>
            <param name="ackWaitTime">Time in ms to wait for acknowledgement</param>
            <returns>0=fail, 1=pass, 2=timeout, 3=cancelled</returns>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntChannel.SendExtAcknowledgedData(SmallEarthTech.AntRadioInterface.ChannelId,System.Byte[],System.UInt32)">
            <summary>Sends the given data as an extended acknowledged transmission.
            Throws exception if data &gt; 8-bytes in length</summary>
            <param name="channelId">Channel ID assigned to a device</param>
            <param name="data">Data to send (length 8 or less)</param>
            <param name="ackWaitTime">Time in ms to wait for acknowledgement</param>
            <returns>0=fail, 1=pass, 2=timeout, 3=cancelled</returns>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntChannel.SendExtAcknowledgedDataAsync(SmallEarthTech.AntRadioInterface.ChannelId,System.Byte[],System.UInt32)">
            <summary>Sends the given data as an extended acknowledged transmission.
            Throws exception if data &gt; 8-bytes in length</summary>
            <param name="channelId">Channel ID assigned to a device</param>
            <param name="data">Data to send (length 8 or less)</param>
            <param name="ackWaitTime">Time in ms to wait for acknowledgement</param>
            <returns>0=fail, 1=pass, 2=timeout, 3=cancelled</returns>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntChannel.SendExtBurstTransfer(SmallEarthTech.AntRadioInterface.ChannelId,System.Byte[],System.UInt32)">
            <summary>Sends the given data as an extended burst transmission. Returns: 0=fail, 1=pass, 2=timeout, 3=cancelled</summary>
            <param name="channelId">Channel ID assigned to a device</param>
            <param name="data">data to send, can be any length</param>
            <param name="completeWaitTime">Time in ms to wait for completion of transfer</param>
            <returns>0=fail, 1=pass, 2=timeout, 3=cancelled</returns>
            <overloads>Sends extended burst data</overloads>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntChannel.SendExtBurstTransferAsync(SmallEarthTech.AntRadioInterface.ChannelId,System.Byte[],System.UInt32)">
            <summary>Sends the given data as an extended burst transmission. Returns: 0=fail, 1=pass, 2=timeout, 3=cancelled</summary>
            <param name="channelId">Channel ID assigned to a device</param>
            <param name="data">data to send, can be any length</param>
            <param name="completeWaitTime">Time in ms to wait for completion of transfer</param>
            <returns>0=fail, 1=pass, 2=timeout, 3=cancelled</returns>
            <overloads>Sends extended burst data</overloads>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntChannel.CloseChannel(System.UInt32)">
            <overloads>Closes the channel</overloads>
            <summary>
            Close this channel
            </summary>
            <param name="responseWaitTime">Time to wait for device success response</param>
            <returns>True on success. Note: Always returns true with a response time of 0</returns>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntChannel.SetLowPrioritySearchTimeout(System.Byte,System.UInt32)">
            <overloads>Sets the channel low priority search timeout</overloads>
            <summary>
            Sets the search timeout for the channel's low-priority search, where it will not interrupt other open channels.
            When this period expires the channel will drop to high-priority search.
            This feature is not available in all ANT devices.
            </summary>
            <param name="lowPriorityTimeout">Timeout period in 2.5 second units</param>
            <param name="responseWaitTime">Time to wait for device success response</param>
            <returns>True on success. Note: Always returns true with a response time of 0</returns>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntChannel.IncludeExcludeListAddChannel(SmallEarthTech.AntRadioInterface.ChannelId,System.Byte,System.UInt32)">
            <summary>
            Add the given channel ID to the channel's inclusion/exclusion list.
            The channelID is then included or excluded from the wild card search depending on how the list is configured.
            Throws exception if listIndex &gt; 3.
            </summary>
            <param name="channelId">Channel ID assigned to a device</param>
            <param name="listIndex">position in inclusion/exclusion list to add channelID at (Max size of list is 4)</param>
            <param name="responseWaitTime">Time to wait for device success response</param>
            <returns>True on success. Note: Always returns true with a response time of 0</returns>
            <overloads>Adds a channel ID to the device inclusion/exclusion list</overloads>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntChannel.IncludeExcludeListConfigure(System.Byte,System.Boolean,System.UInt32)">
            <overloads>Configures the device inclusion/exclusion list</overloads>
            <summary>
            Configures the inclusion/exclusion list. If isExclusionList is true the channel IDs will be
            excluded from any wild card search on this channel. Otherwise the IDs are the only IDs accepted in the search.
            Throws exception if list size is greater than 4.
            </summary>
            <param name="listSize">The desired size of the list, max size is 4, 0=none</param>
            <param name="isExclusionList">True = exclusion list, False = inclusion list</param>
            <param name="responseWaitTime">Time to wait for device success response</param>
            <returns>True on success. Note: Always returns true with a response time of 0</returns>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntChannel.SetProximitySearch(System.Byte,System.UInt32)">
            <overloads>Configures proximity search</overloads>
            <summary>
            Enables a one time proximity requirement for searching.  Only ANT devices within the set proximity bin can be acquired.
            Search threshold values are not correlated to specific distances as this will be dependent on the system design.
            This feature is not available on all ANT devices.
            Throws exception if given bin value is > 10.
            </summary>
            <param name="thresholdBin">Threshold bin. Value from 0-10 (0= disabled). A search threshold value of 1 (i.e. bin 1) will yield the smallest radius search and is generally recommended as there is less chance of connecting to the wrong device. </param>
            <param name="responseWaitTime">Time to wait for device success response</param>
            <returns>True on success. Note: Always returns true with a response time of 0</returns>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntChannel.ConfigFrequencyAgility(System.Byte,System.Byte,System.Byte,System.UInt32)">
            <overloads>Configures the three operating RF frequencies for ANT frequency agility mode</overloads>
            <summary>
            This function configures the three operating RF frequencies for ANT frequency agility mode
            and should be used with the AdvFrequencyAgility extended channel assignment flag.
            Should not be used with shared, or Tx/Rx only channel types.
            This feature is not available on all ANT devices.
            </summary>
            <param name="freq1">Operating RF frequency 1</param>
            <param name="freq2">Operating RF frequency 2</param>
            <param name="freq3">Operating RF frequency 3</param>
            <param name="responseWaitTime">Time to wait for device success response</param>
            <returns>True on success. Note: Always returns true with a response time of 0</returns>
        </member>
        <member name="T:SmallEarthTech.AntRadioInterface.AdvancedBurstConfigFlags">
            <summary>
            Flags for configuring advanced bursting features.
            </summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.AdvancedBurstConfigFlags.FrequencyHopEnable">
            <summary>The frequency hop enable</summary>
        </member>
        <member name="T:SmallEarthTech.AntRadioInterface.EventBufferConfig">
            <summary>
            Event groups for configuring Event Buffering
            </summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.EventBufferConfig.BufferLowPriorityEvents">
            <summary>The buffer low priority events</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.EventBufferConfig.BufferAllEvents">
            <summary>The buffer all events</summary>
        </member>
        <member name="T:SmallEarthTech.AntRadioInterface.LibConfigFlags">
            <summary>
            Flags for configuring device ANT library
            </summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.LibConfigFlags.RadioConfigAlways">
            <summary>The radio configuration always</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.LibConfigFlags.MesgOutIncTimeStamp">
            <summary>The message out inc time stamp</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.LibConfigFlags.MesgOutIncRssi">
            <summary>The message out inc RSSI</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.LibConfigFlags.MesgOutIncDeviceId">
            <summary>The message out inc device identifier</summary>
        </member>
        <member name="T:SmallEarthTech.AntRadioInterface.IAntConfiguration">
            <summary>This interface defines common ANT radio configuration commands.</summary>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntConfiguration.ConfigureAdvancedBursting(System.Boolean,System.Byte,SmallEarthTech.AntRadioInterface.AdvancedBurstConfigFlags,SmallEarthTech.AntRadioInterface.AdvancedBurstConfigFlags,System.UInt32)">
            <summary>Configures the advanced bursting.</summary>
            <param name="enable">if set to <c>true</c> [enable].</param>
            <param name="maxPacketLength">Maximum length of the packet.</param>
            <param name="requiredFields">The required fields.</param>
            <param name="optionalFields">The optional fields.</param>
            <param name="responseWaitTime">The response wait time in milliseconds. The default is 0ms.</param>
            <returns>
            true if successful
            </returns>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntConfiguration.ConfigureAdvancedBursting_ext(System.Boolean,System.Byte,SmallEarthTech.AntRadioInterface.AdvancedBurstConfigFlags,SmallEarthTech.AntRadioInterface.AdvancedBurstConfigFlags,System.UInt16,System.Byte,System.UInt32)">
            <summary>Configures the extended advanced bursting.</summary>
            <param name="enable">if set to <c>true</c> [enable].</param>
            <param name="maxPacketLength">Maximum length of the packet.</param>
            <param name="requiredFields">The required fields.</param>
            <param name="optionalFields">The optional fields.</param>
            <param name="stallCount">The stall count.</param>
            <param name="retryCount">The retry count.</param>
            <param name="responseWaitTime">The response wait time in milliseconds. The default is 0ms.</param>
            <returns>
            true if successful
            </returns>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntConfiguration.ConfigureAdvancedBurstSplitting(System.Boolean)">
            <summary>Configures the advanced burst splitting.</summary>
            <param name="splitBursts">if set to <c>true</c> [split bursts].</param>
            <returns>
            true if successful
            </returns>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntConfiguration.ConfigureEventBuffer(SmallEarthTech.AntRadioInterface.EventBufferConfig,System.UInt16,System.UInt16,System.UInt32)">
            <summary>Configures the event buffer.</summary>
            <param name="config">The configuration.</param>
            <param name="size">The size.</param>
            <param name="time">The time.</param>
            <param name="responseWaitTime">The response wait time in milliseconds. The default is 0ms.</param>
            <returns>
            true if successful
            </returns>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntConfiguration.ConfigureEventFilter(System.UInt16,System.UInt32)">
            <summary>Configures the event filter.</summary>
            <param name="eventFilter">The event filter.</param>
            <param name="responseWaitTime">The response wait time in milliseconds. The default is 0ms.</param>
            <returns>
            true if successful
            </returns>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntConfiguration.ConfigureHighDutySearch(System.Boolean,System.Byte,System.UInt32)">
            <summary>Configures the high duty search.</summary>
            <param name="enable">if set to <c>true</c> [enable].</param>
            <param name="suppressionCycles">The suppression cycles.</param>
            <param name="responseWaitTime">The response wait time in milliseconds. The default is 0ms.</param>
            <returns>
            true if successful
            </returns>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntConfiguration.ConfigureUserNvm(System.UInt16,System.Byte[],System.Byte,System.UInt32)">
            <summary>Configures the user NVM.</summary>
            <param name="address">The address.</param>
            <param name="data">The data.</param>
            <param name="size">The size.</param>
            <param name="responseWaitTime">The response wait time in milliseconds. The default is 0ms.</param>
            <returns>
            true if successful
            </returns>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntConfiguration.CrystalEnable(System.UInt32)">
            <summary>Crystal enable.</summary>
            <param name="responseWaitTime">The response wait time in milliseconds. The default is 0ms.</param>
            <returns>
            true if successful
            </returns>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntConfiguration.EnableLED(System.Boolean,System.UInt32)">
            <summary>Enables the LED.</summary>
            <param name="isEnabled">if set to <c>true</c> [is enabled].</param>
            <param name="responseWaitTime">The response wait time in milliseconds. The default is 0ms.</param>
            <returns>
            true if successful
            </returns>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntConfiguration.EnableRxExtendedMessages(System.Boolean,System.UInt32)">
            <summary>Enables Rx extended messages.</summary>
            <param name="isEnabled">if set to <c>true</c> [is enabled].</param>
            <param name="responseWaitTime">The response wait time in milliseconds. The default is 0ms.</param>
            <returns>
            true if successful
            </returns>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntConfiguration.SetLibConfig(SmallEarthTech.AntRadioInterface.LibConfigFlags,System.UInt32)">
            <summary>Sets the library configuration.</summary>
            <param name="libConfigFlags">The library configuration flags.</param>
            <param name="responseWaitTime">The response wait time in milliseconds. The default is 0ms.</param>
            <returns>
            true if successful
            </returns>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntConfiguration.SetNetworkKey(System.Byte,System.Byte[],System.UInt32)">
            <summary>Sets the network key.</summary>
            <param name="netNumber">The network number.</param>
            <param name="networkKey">The network key.</param>
            <param name="responseWaitTime">The response wait time in milliseconds. The default is 0ms.</param>
            <returns>
            true if successful
            </returns>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntConfiguration.SetTransmitPowerForAllChannels(SmallEarthTech.AntRadioInterface.TransmitPower,System.UInt32)">
            <summary>Sets the transmit power for all channels.</summary>
            <param name="transmitPower">The transmit power.</param>
            <param name="responseWaitTime">The response wait time in milliseconds. The default is 0ms.</param>
            <returns>
            true if successful
            </returns>
        </member>
        <member name="T:SmallEarthTech.AntRadioInterface.IAntControl">
            <summary>This interface defines ANT radio control messages and status requests.</summary>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntControl.OpenRxScanMode(System.UInt32)">
            <summary>Open channel 0 in continuous scan mode. Channel 0 should have been
            previously assigned and configured as a slave receive channel.</summary>
            <param name="responseWaitTime">The response wait time in milliseconds. The default is 0ms.</param>
            <returns>
            true if successful
            </returns>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntControl.RequestMessage(SmallEarthTech.AntRadioInterface.RequestMessageID,System.Byte)">
            <summary>This message is sent to the ANT radio to request specific information from the radio.</summary>
            <param name="messageID">The message identifier.</param>
            <param name="channelNum">The channel number. The default channel is 0.</param>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntControl.ResetSystem(System.UInt32)">
            <summary>Resets the ANT radio.</summary>
            <param name="responseWaitTime">The response wait time in milliseconds. The default is 500ms.</param>
            <returns>
            true if successful
            </returns>
            <remarks>
            Execution of this command terminates all channels.All information previously configured
            in the system can no longer be considered valid. The application should wait 500ms before any
            further commands are issued from the host.
            </remarks>
        </member>
        <member name="T:SmallEarthTech.AntRadioInterface.RequestMessageID">
            <summary>
            Message ID to request message.
            Note: Where desired, raw byte values can be cast to the enum type. IE: <c>(RequestMessageID)0x4E</c> will compile.
            </summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.RequestMessageID.Version">
            <summary>The version</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.RequestMessageID.ChannelId">
            <summary>The channel identifier</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.RequestMessageID.ChannelStatus">
            <summary>The channel status</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.RequestMessageID.Capabilities">
            <summary>The capabilities</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.RequestMessageID.SerialNumber">
            <summary>The serial number</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.RequestMessageID.UserNvm">
            <summary>The user NVM</summary>
        </member>
        <member name="T:SmallEarthTech.AntRadioInterface.TransmitPower">
            <summary>
            Transmit Power offSets
            </summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.TransmitPower.Minus20DB">
            <summary>The minus 20 dB</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.TransmitPower.Minus10DB">
            <summary>The minus 10 dB</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.TransmitPower.Minus5DB">
            <summary>The minus 5 dB</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.TransmitPower.Tx0DB">
            <summary>0 dB</summary>
        </member>
        <member name="T:SmallEarthTech.AntRadioInterface.EventMsgId">
            <summary>Channel event message identifier.</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.EventMsgId.RxSearchTimeout">
            <summary>The Rx search timeout</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.EventMsgId.RxFailed">
            <summary>The Rx failed</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.EventMsgId.TxSuccess">
            <summary>The Tx success</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.EventMsgId.TransferRxFailed">
            <summary>The transfer Rx failed</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.EventMsgId.TransferTxCompleted">
            <summary>The transfer Tx completed</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.EventMsgId.TransferTxFailed">
            <summary>The transfer Tx failed</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.EventMsgId.ChannelClosed">
            <summary>The channel closed</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.EventMsgId.RxFailGoToSearch">
            <summary>The Rx failed to go to search</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.EventMsgId.ChannelCollision">
            <summary>The channel collision</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.EventMsgId.TransferTxStart">
            <summary>The transfer Tx start</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.EventMsgId.TransferNextDataBlock">
            <summary>The transfer next data block</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.EventMsgId.SerialQueueOverflow">
            <summary>The serial queue overflow</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.EventMsgId.QueueOverflow">
            <summary>The queue overflow</summary>
        </member>
        <member name="T:SmallEarthTech.AntRadioInterface.ResponseMsgId">
            <summary>Channel response message identifier.</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.ResponseMsgId.NoError">
            <summary>The no error</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.ResponseMsgId.ChannelInWrongState">
            <summary>The channel in wrong state</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.ResponseMsgId.ChannelNotOpened">
            <summary>The channel not opened</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.ResponseMsgId.ChannelIdNotSet">
            <summary>The channel identifier not set</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.ResponseMsgId.CloseAllChannels">
            <summary>The close all channels</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.ResponseMsgId.TransferInProgress">
            <summary>The transfer in progress</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.ResponseMsgId.TransferSeqNumberError">
            <summary>The transfer sequence number error</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.ResponseMsgId.TransferInError">
            <summary>The transfer in error</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.ResponseMsgId.MsgSizeExceedsLimit">
            <summary>The message size exceeds limit</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.ResponseMsgId.InvalidMsg">
            <summary>The invalid message</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.ResponseMsgId.InvalidNetworkNumber">
            <summary>The invalid network number</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.ResponseMsgId.InvalidListId">
            <summary>The invalid list identifier</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.ResponseMsgId.InvalidScanTxChannels">
            <summary>The invalid scan Tx channels</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.ResponseMsgId.InvalidParameter">
            <summary>The invalid parameter</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.ResponseMsgId.EncryptNegotiationSuccess">
            <summary>The encrypt negotiation success</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.ResponseMsgId.EncryptNegotiationFail">
            <summary>The encrypt negotiation failed</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.ResponseMsgId.NvmFullError">
            <summary>The NVM full error</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.ResponseMsgId.NvmWriteError">
            <summary>The NVM write error</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.ResponseMsgId.UsbStringWriteFail">
            <summary>The USB string write fail</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.ResponseMsgId.MsgSerialErrorId">
            <summary>The message serial error identifier</summary>
        </member>
        <member name="T:SmallEarthTech.AntRadioInterface.IAntRadio">
            <summary>ANT radio interface.</summary>
        </member>
        <member name="E:SmallEarthTech.AntRadioInterface.IAntRadio.RadioResponse">
            <summary>Occurs when radio response has been received.</summary>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntRadio.InitializeContinuousScanMode">
             <summary>Initializes the ANT radio for continuous scan mode.</summary>
             <returns>
             Returns an array of ANT channels. The first element of the array (ANT channel 0) is used for continuous
             scan mode to receive broadcast messages from ANT master devices. The remaining channels
             should be configured so messages may be sent to ANT master devices.
             </returns>
             <example>
             Implementors typically would perform the following setup -
             <code>public Task&lt;IAntChannel[]&gt; InitializeContinuousScanMode()
             {
                 // multiple clients may attempt to initialize
                 lock (_lock)
                 {
                     // test if channels have not been allocated (first time initialization)
                     if (_channels.Length == 0)
                     {
                         // allocate channels for this radio
                         _logger.LogInformation("Allocating channels for continuous scan mode.");
                         _channels = new IAntChannel[NumChannels];
            
                         // configure channel 0 for continuous scan mode
                         SetNetworkKey(0, new byte[] { 0xB9, 0xA5, 0x21, 0xFB, 0xBD, 0x72, 0xC3, 0x45 });
                         EnableRxExtendedMessages(true);
                         _channels[0] = GetChannel(0);
                         _channels[0].AssignChannel(ChannelType.BaseSlaveReceive, 0, 500);
                         _channels[0].SetChannelID(new ChannelId(0), 500);
                         _channels[0].SetChannelFreq(57, 500);
                         OpenRxScanMode();
            
                         // assign channels for devices to use for sending messages
                         for (int i = 1; i &lt; NumChannels; i++)
                         {
                             _channels[i] = GetChannel(i);
                             _ = _channels[i].AssignChannel(ChannelType.BaseSlaveReceive, 0, 500);
                         }
                     }
                 }
            
                 return Task.FromResult(_channels);
             }</code></example>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntRadio.CancelTransfers(System.Int32)">
            <summary>Cancels the transfers.</summary>
            <param name="cancelWaitTime">The cancel wait time.</param>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntRadio.GetChannel(System.Int32)">
            <summary>Gets the channel.</summary>
            <param name="num">The number.</param>
            <returns>
            <see cref="T:SmallEarthTech.AntRadioInterface.IAntChannel"/>
            </returns>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntRadio.GetDeviceCapabilities(System.Boolean,System.UInt32)">
            <summary>Gets the device capabilities of the ANT radio.</summary>
            <param name="forceNewCopy">If set to <c>true</c> force new copy. The default is false.</param>
            <param name="responseWaitTime">The response wait time in milliseconds. The default is 1500ms.</param>
            <returns>
            A task encapsulating the <see cref="T:SmallEarthTech.AntRadioInterface.DeviceCapabilities"/>
            </returns>
            <remarks>
            Default arguments are provided by the method interface and are inherited by concrete implementations of IAntRadio.
            It is unlikely the default arguments need to be overridden. Typically a copy of the <see cref="T:SmallEarthTech.AntRadioInterface.DeviceCapabilities"/> is maintained
            in the concrete implementation of the ANT radio and the response wait time only needs to be overridden if there a large
            latencies getting the response. Use a named argument if you only need to specify a different response wait time -
            e.g. GetDeviceCapabilities(responseWaitTime: 2000).
            </remarks>
        </member>
        <member name="P:SmallEarthTech.AntRadioInterface.IAntRadio.NumChannels">
            <summary>Gets the number of channels supported by the ANT radio.</summary>
            <value>The number of channels.</value>
        </member>
        <member name="P:SmallEarthTech.AntRadioInterface.IAntRadio.ProductDescription">
            <summary>Gets the ANT radio product description.</summary>
            <value>The product description.</value>
        </member>
        <member name="P:SmallEarthTech.AntRadioInterface.IAntRadio.SerialNumber">
            <summary>Gets the serial number.</summary>
        </member>
        <member name="P:SmallEarthTech.AntRadioInterface.IAntRadio.Version">
            <summary>Gets the radio version string.</summary>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntRadio.ReadUserNvm(System.UInt16,System.Byte,System.UInt32)">
            <summary>Reads the user NVM.</summary>
            <param name="address">The address.</param>
            <param name="size">The size.</param>
            <param name="responseWaitTime">The response wait time in milliseconds. The default is 500ms.</param>
            <returns>
            <see cref="T:SmallEarthTech.AntRadioInterface.AntResponse"/>
            </returns>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntRadio.RequestMessageAndResponse(SmallEarthTech.AntRadioInterface.RequestMessageID,System.UInt32,System.Byte)">
            <summary>Requests a message and waits to return the response.</summary>
            <param name="messageID">The message identifier.</param>
            <param name="responseWaitTime">The response wait time.</param>
            <param name="channelNum">The radio channel number to use. The default is channel 0.</param>
            <returns>
            <see cref="T:SmallEarthTech.AntRadioInterface.AntResponse"/>
            </returns>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntRadio.WriteRawMessageToDevice(System.Byte,System.Byte[])">
            <summary>Writes the raw message to device.</summary>
            <param name="msgID">The MSG identifier.</param>
            <param name="msgData">The MSG data.</param>
            <returns>
            true if successful
            </returns>
        </member>
        <member name="T:SmallEarthTech.AntRadioInterface.IAntUsbRadio">
            <summary>This interface is used for ANT radios specifically connected to the host USB ports.</summary>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntUsbRadio.GetBaudRate">
            <summary>Gets the opened USB baud rate.</summary>
            <returns>The USB baud rate of this device.</returns>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntUsbRadio.GetDeviceNum">
            <summary>Gets the opened USB device number.</summary>
            <returns>The device number of this device.</returns>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntUsbRadio.GetPID">
            <summary>Gets the device USB PID.</summary>
            <returns>The product ID of this device.</returns>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntUsbRadio.GetVID">
            <summary>Gets the device USB VID.</summary>
            <returns>The vendor ID of this device.</returns>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntUsbRadio.GetProductDescription">
            <summary>Gets the USB device product description.</summary>
            <returns>The USB product string of this device.</returns>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntUsbRadio.GetSerialString">
            <summary>Gets the USB device serial number string.</summary>
            <returns>The USB serial number string of this device.</returns>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IAntUsbRadio.ResetUSB">
            <summary>Resets the ANT radio USB interface.</summary>
        </member>
        <member name="T:SmallEarthTech.AntRadioInterface.EncryptionNVMOp">
            <summary>Encryption non-volatile memory operations.</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.EncryptionNVMOp.LoadKeyFromNvm">
            <summary>The load key from NVM</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.EncryptionNVMOp.StoreKeyToNvm">
            <summary>The store key to NVM</summary>
        </member>
        <member name="T:SmallEarthTech.AntRadioInterface.EncryptionInfo">
            <summary>Encryption information.</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.EncryptionInfo.EncryptionId">
            <summary>The encryption identifier</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.EncryptionInfo.UserInfoString">
            <summary>The user information string</summary>
        </member>
        <member name="F:SmallEarthTech.AntRadioInterface.EncryptionInfo.RandomNumberSeed">
            <summary>The random number seed</summary>
        </member>
        <member name="T:SmallEarthTech.AntRadioInterface.ICrypto">
            <summary>This interface defines ANT encryption commands.</summary>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.ICrypto.CryptoKeyNVMOp(SmallEarthTech.AntRadioInterface.EncryptionNVMOp,System.Byte,System.Byte[],System.UInt32)">
            <summary>Crypto key NVM operation.</summary>
            <param name="memoryOperation">The memory operation.</param>
            <param name="nonVolatileKeyIndex">Index of the non volatile key.</param>
            <param name="operationData">The operation data.</param>
            <param name="responseWaitTime">The response wait time in milliseconds. The default is 0ms.</param>
            <returns>
            true if successful
            </returns>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.ICrypto.LoadCryptoKeyFromNVM(System.Byte,System.Byte,System.UInt32)">
            <summary>Loads the crypto key from NVM.</summary>
            <param name="nonVolatileKeyIndex">Index of the non volatile key.</param>
            <param name="volatileKeyIndex">Index of the volatile key.</param>
            <param name="responseWaitTime">The response wait time in milliseconds. The default is 0ms.</param>
            <returns>
            true if successful
            </returns>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.ICrypto.SetCryptoID(System.Byte[],System.UInt32)">
            <summary>Sets the crypto identifier.</summary>
            <param name="encryptionID">The encryption identifier.</param>
            <param name="responseWaitTime">The response wait time in milliseconds. The default is 0ms.</param>
            <returns>
            true if successful
            </returns>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.ICrypto.SetCryptoInfo(SmallEarthTech.AntRadioInterface.EncryptionInfo,System.Byte[],System.UInt32)">
            <summary>Sets the crypto information.</summary>
            <param name="encryptionParameter">The encryption parameter.</param>
            <param name="parameterData">The parameter data.</param>
            <param name="responseWaitTime">The response wait time in milliseconds. The default is 0ms.</param>
            <returns>
            true if successful
            </returns>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.ICrypto.SetCryptoKey(System.Byte,System.Byte[],System.UInt32)">
            <summary>Sets the crypto key.</summary>
            <param name="volatileKeyIndex">Index of the volatile key.</param>
            <param name="encryptionKey">The encryption key.</param>
            <param name="responseWaitTime">The response wait time in milliseconds. The default is 0ms.</param>
            <returns>
            true if successful
            </returns>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.ICrypto.SetCryptoRNGSeed(System.Byte[],System.UInt32)">
            <summary>Sets the crypto RNG seed.</summary>
            <param name="cryptoRNGSeed">The crypto RNG seed.</param>
            <param name="responseWaitTime">The response wait time in milliseconds. The default is 0ms.</param>
            <returns>
            true if successful
            </returns>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.ICrypto.SetCryptoUserInfo(System.Byte[],System.UInt32)">
            <summary>Sets the crypto user information.</summary>
            <param name="userInfoString">The user information string.</param>
            <param name="responseWaitTime">The response wait time in milliseconds. The default is 0ms.</param>
            <returns>
            true if successful
            </returns>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.ICrypto.StoreCryptoKeyToNVM(System.Byte,System.Byte[],System.UInt32)">
            <summary>Stores the crypto key to NVM.</summary>
            <param name="nonVolatileKeyIndex">Index of the non volatile key.</param>
            <param name="encryptionKey">The encryption key.</param>
            <param name="responseWaitTime">The response wait time in milliseconds. The default is 0ms.</param>
            <returns>
            true if successful
            </returns>
        </member>
        <member name="T:SmallEarthTech.AntRadioInterface.IFitSettings">
            <summary>This interface controls general FIT equipped devices.</summary>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IFitSettings.FitAdjustPairingSettings(System.Byte,System.Byte,System.Byte,System.UInt32)">
            <summary>FIT adjust pairing settings.</summary>
            <param name="searchLv">The search lv.</param>
            <param name="pairLv">The pair lv.</param>
            <param name="trackLv">The track lv.</param>
            <param name="responseWaitTime">The response wait time in milliseconds. The default is 0ms.</param>
            <returns>
            true if successful
            </returns>
        </member>
        <member name="M:SmallEarthTech.AntRadioInterface.IFitSettings.FitSetFEState(System.Byte,System.UInt32)">
            <summary>FIT set the state of the fitness equipment.</summary>
            <param name="feState">State of the fe.</param>
            <param name="responseWaitTime">The response wait time in milliseconds. The default is 0ms.</param>
            <returns>
            true if successful
            </returns>
        </member>
    </members>
</doc>
